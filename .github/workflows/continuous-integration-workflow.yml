name: build

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.9, '3.10', '3.11', '3.12']#, '3.13']
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }} 🔧
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip dependencies cache
        # Attempt to restore an existing cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}-${{ hashFiles('dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Virtualenvs dependencies cache
        # Attempt to restore an existing cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-virtualenvs-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}-${{ hashFiles('dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-virtualenvs-
      - name: Install dependencies ⚙️
        run: |
          sudo apt install libjpeg-dev zlib1g-dev
          python -m pip install -U pip poetry
          poetry install
          source $(poetry env info --path)/bin/activate
          pip install -r dev-requirements.txt
      - name: Linter 🔎
        run: |
          source $(poetry env info --path)/bin/activate
          pylint *.py
      - name: Tests ☑
        run: |
          source $(poetry env info --path)/bin/activate
          py.test
